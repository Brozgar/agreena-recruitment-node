tags:
- name: auth
  description: auth API
- name: carbonCertificates
  description: Carbon certificates API

paths:
# [POST] signup
  /signup:
    post:
      tags:
        - auth
      summary: Signup
      parameters:
        - name: body
          in: body
          description: User data
          required: true
          schema:
            $ref: '#/definitions/userRequestBody'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] login
  /login:
    post:
      tags:
        - auth
      summary: Login
      parameters:
        - name: body
          in: body
          description: User data
          required: true
          schema:
            $ref: '#/definitions/userRequestBody'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] logout
  /logout:
    post:
      tags:
        - auth
      summary: Logout
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] carbon-certificates
  /carbon-certificates:
    get:
      tags:
        - carbonCertificates
      summary: Find available certificates
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [GET] carbon-certificates/my
  /carbon-certificates/my:
    get:
      tags:
        - carbonCertificates
      summary: Find current user's certificates
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [PUT] carbon-certificates/id
  /carbon-certificates/{id}:
    put:
      tags:
        - carbonCertificates
      summary: Transfer the certificate to another user
      parameters:
        - name: id
          in: path
          description: Certificate ID
          required: true
        - name: body
          in: body
          description: Certificate data
          required: true
          schema:
            type: object
            properties:
              toUserId:
                type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  userRequestBody:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  carbonCertificate:
    type: object
    required:
        - email
        - password
    properties:
      _id:
        type: string
        description: certificate ID
      country:
        type: string
        description: country of the certificate
      status:
        type: string
        description: certificate status
        enum:
          - available
          - owned
          - transferred
      owner:
        type: object
        properties:
          _id:
            type: string
            description: user ID

schemes:
 - https
 - http
